plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {

    // operator
    implementation files('operator.jar')

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'info.picocli:picocli:4.5.2'

    implementation 'org.apache.logging.log4j:log4j-api:2.13.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.3'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'

    testImplementation 'org.mockito:mockito-core:3.3.3'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

jar {

    duplicatesStrategy = 'include'

    manifest {
        attributes(
            "Main-Class" : "ai.clarity.challenge.Main",
            'Multi-Release' : "true"
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
